// <auto-generated />
using System;
using AoW.EntityFramework.Date;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AoW.EntityFramework.Migrations
{
    [DbContext(typeof(AowDbContext))]
    [Migration("20221007101223_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.9");

            modelBuilder.Entity("AoW.EntityFramework.Models.ExtraditionInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("TEXT");

                    b.Property<int>("StaffID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Term")
                        .HasColumnType("INTEGER");

                    b.Property<int>("WorkWearID")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("StaffID");

                    b.HasIndex("WorkWearID");

                    b.ToTable("ExtraditionInfo");
                });

            modelBuilder.Entity("AoW.EntityFramework.Models.Provider", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("Home")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Provider");
                });

            modelBuilder.Entity("AoW.EntityFramework.Models.ReceiptInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Count")
                        .HasColumnType("INTEGER");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("TEXT");

                    b.Property<int>("ProviderID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("WorkWearID")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ProviderID");

                    b.HasIndex("WorkWearID");

                    b.ToTable("ReceiptInfo");
                });

            modelBuilder.Entity("AoW.EntityFramework.Models.Staff", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .HasColumnType("TEXT");

                    b.Property<string>("Post")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Profession")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("SecondName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Staff");
                });

            modelBuilder.Entity("AoW.EntityFramework.Models.WorkWear", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Price")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("WorkWear");
                });

            modelBuilder.Entity("AoW.EntityFramework.Models.ExtraditionInfo", b =>
                {
                    b.HasOne("AoW.EntityFramework.Models.Staff", "Staff")
                        .WithMany("Extraditions")
                        .HasForeignKey("StaffID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AoW.EntityFramework.Models.WorkWear", "WorkWear")
                        .WithMany("ExtraditionInfos")
                        .HasForeignKey("WorkWearID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Staff");

                    b.Navigation("WorkWear");
                });

            modelBuilder.Entity("AoW.EntityFramework.Models.ReceiptInfo", b =>
                {
                    b.HasOne("AoW.EntityFramework.Models.Provider", "Provider")
                        .WithMany("ReceiptInfos")
                        .HasForeignKey("ProviderID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AoW.EntityFramework.Models.WorkWear", "WorkWear")
                        .WithMany("ReceiptInfos")
                        .HasForeignKey("WorkWearID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Provider");

                    b.Navigation("WorkWear");
                });

            modelBuilder.Entity("AoW.EntityFramework.Models.Provider", b =>
                {
                    b.Navigation("ReceiptInfos");
                });

            modelBuilder.Entity("AoW.EntityFramework.Models.Staff", b =>
                {
                    b.Navigation("Extraditions");
                });

            modelBuilder.Entity("AoW.EntityFramework.Models.WorkWear", b =>
                {
                    b.Navigation("ExtraditionInfos");

                    b.Navigation("ReceiptInfos");
                });
#pragma warning restore 612, 618
        }
    }
}
